<?xml version="1.0" encoding="UTF-8"?>
<project name="L2JLisvus" default="finish" basedir=".">
  	<description>
  		This script will build the L2JLisvus server.
        
 		This program is free software: you can redistribute it and/or modify it under
		the terms of the GNU General Public License as published by the Free Software
		Foundation, either version 3 of the License, or (at your option) any later
		version.
		
		This program is distributed in the hope that it will be useful, but WITHOUT
		ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
		FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
		details.
		
		You should have received a copy of the GNU General Public License along with
		this program. If not, see http://www.gnu.org/licenses/.
  	</description>

  	<property name="build" location="build"/>
  	<property name="build.dist" location="${build}/dist"/>
  	<property name="build.dist.game" location="${build.dist}/gameserver"/>
	<property name="build.dist.login" location="${build.dist}/login"/>
  	<property name="build.dist.sql" location="${build.dist}/sql"/>
  	<property name="build.dist.tools" location="${build.dist}/tools"/>
  	<property name="properties-file" location="${build.dist.game}/config/l2j-version.properties"/>

  	<target name="init"
    		description="Create the output directories. Do nothing if directories were already created.">
    	<mkdir dir="${build}"/>
    	<mkdir dir="${build.dist}"/>
    	<mkdir dir="${build.dist.game}"/>
  		<mkdir dir="${build.dist.login}"/>
    	<mkdir dir="${build.dist.sql}"/>
    	<mkdir dir="${build.dist.tools}"/>
  	</target>

  	<target name="export" depends="version"
    	description="Synchronizes build space contents with project.">
    	<sync includeEmptyDirs="true" todir="${build.dist.game}/data">
       		<fileset dir="${basedir}/data">
        		<exclude name=".project"/>
        		<exclude name="log/**"/>
		        <exclude name="cachedir/**"/>
		        <exclude name="clans/**"/>
		        <exclude name="crests/**"/>
		        <exclude name="**/*.class"/>
		        <exclude name="**/*.jar"/>
		        <exclude name="geodata/*.l2j"/>
		        <exclude name="pathnode/*.pn"/>
        		<include name="**/*"/>
      		</fileset>
    	</sync>
    	<sync includeEmptyDirs="true" todir="${build.dist.sql}">
      		<fileset dir="${basedir}/sql">
        		<include name="*.*"/>
        		<include name="custom/*.*"/>
      		</fileset>
    	</sync>
    	<sync includeEmptyDirs="true" todir="${build.dist.tools}">
      		<fileset dir="${basedir}/tools">
        		<include name="*.*"/>
        		<exclude name="database_installer.rc"/>
        		<exclude name="*.txt"/>
        		<exclude name="*.log"/>
        		<exclude name="*backup.sql"/>
      		</fileset>
    	</sync>
  		<sync includeEmptyDirs="true" todir="${build.dist.login}">
			<fileset dir="${build.dist.game}/data">
  				<include name="servername.xml"/>
			</fileset>
		</sync>
  	</target>

  	<target name="dist" depends="export"
    		description="Creates a ZIP file. Suitable for distribution but building takes longer. See dist-deflate for faster builds.">
    	<tar compression="gzip" destfile="${build}/datapack.tar.gz" basedir="${build.dist}"/>
  	</target>

  	<target name="version" depends="init"
    		description="Create l2j-version.properties file">
    	<tstamp>
      		<format property="build.tstamp" pattern="yyyyMMdd_HHmm"/>
    	</tstamp>
    	<exec dir="." executable="git" outputproperty="l2j.commit" failifexecutionfails="false">
      		<arg value="log"/>
			<arg value="-1"/>
			<arg value="--pretty=format:%h"/>
    	</exec>
  		<echo message="Commit ${l2j.commit}"/>
    	<concat destfile="${properties-file}">
			commit=${l2j.commit}
    		builddate=${build.tstamp}
    	</concat>
  	</target>

  	<target name="clean"
    		description="Deletes the whole build space and existing packages.">
    	<delete dir="${build}"/>
  	</target>

  	<target name="distclean"
    		description="Deletes the datapack distribution ZIP file only, preserving synchronized build files.">
    	<delete file="${build}/datapack.tar.gz"/>
    	<delete file="${build}/datapack-nocompress.tar.gz"/>
  	</target>

	<target name="finish" depends="dist" description="Datapack build path">
        <echo message="Datapack build is located in ${build}"/>
    </target>
</project>